version: '3.8'

services:
  # Python tokenizer service for accurate HuggingFace tokenization
  tokenizer-service:
    build:
      context: ./tokenizer-service
      dockerfile: Dockerfile
    container_name: deberta-tokenizer-service
    ports:
      - "8000:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - promptguard-network

  # Main API service
  promptguard-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: deberta-promptguard
    ports:
      - "5158:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - Logging__MaxLogSize=1000
      - ModelConfiguration__ModelPath=/app/models/deberta-v3-base-prompt-injection-v2/model.onnx
      - ModelConfiguration__TokenizerPath=/app/models/deberta-v3-base-prompt-injection-v2/tokenizer.json
      - ModelConfiguration__TokenizerServiceUrl=http://tokenizer-service:8000
    volumes:
      # Mount models directory from host (if models are too large for image)
      - ./models:/app/models:ro
    restart: unless-stopped
    depends_on:
      tokenizer-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - promptguard-network

networks:
  promptguard-network:
    driver: bridge


