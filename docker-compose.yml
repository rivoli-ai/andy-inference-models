# docker-compose.yml - LOCAL DEVELOPMENT (Recommended)
#
# BEST FOR: Daily development with fast rebuilds (3-5 seconds!)
# - Uses local models from ./models/ directory (volume mount)
# - No model downloads = FAST builds
# - Easy config updates (just restart, no rebuild)
# 
# USAGE: docker-compose up --build
#
# See docs/DOCKER_COMPOSE_GUIDE.md for detailed comparison

services:
  # Python tokenizer service for accurate HuggingFace tokenization
  tokenizer-service:
    build:
      context: ./tokenizer-service
      dockerfile: Dockerfile
    container_name: tokenizer-service
    ports:
      - "8000:8000"
    volumes:
      # Mount config directory so tokenizer can read models.json
      - ./config:/app/config:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - promptguard-network

  # Main API service
  promptguard-api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # Use local models - no need to download during build (fast!)
        - DOWNLOAD_MODELS=false
    container_name: inference-service
    ports:
      - "5158:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - Logging__MaxLogSize=1000
      - ModelsConfigPath=/app/config/models.json
      - ModelConfiguration__TokenizerServiceUrl=http://tokenizer-service:8000
    volumes:
      # Mount local models directory (already downloaded)
      - ./models:/app/models:ro
      # Mount config for easy updates
      - ./config:/app/config:ro
    restart: unless-stopped
    depends_on:
      tokenizer-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - promptguard-network

networks:
  promptguard-network:
    driver: bridge


